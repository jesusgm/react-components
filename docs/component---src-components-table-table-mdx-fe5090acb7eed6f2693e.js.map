{"version":3,"sources":["webpack:///../src/components/table/components/cell/index.jsx","webpack:///../src/components/table/index.jsx","webpack:///../src/components/table/table.mdx","webpack:///../node_modules/gatsby/node_modules/core-js/modules/es7.object.values.js"],"names":["Cell","props","className","head","children","Table","state","page","pageSize","pagination","renderHeader","bind","renderBody","renderFooter","nextPage","prevPage","pageSizeChange","rows","this","Math","ceil","length","setState","event","parseInt","target","value","headers","map","header","i","key","items","slice","row","Object","values","cell","j","numPages","colSpan","onChange","onClick","render","Component","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","of","__position","__code","__scope","Playground","Props","isMDXComponent","$export","$values","S","it"],"mappings":"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","file":"component---src-components-table-table-mdx-fe5090acb7eed6f2693e.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst propTypes = {\n  children: PropTypes.any,\n  head: PropTypes.bool\n};\n\nfunction Cell(props) {\n  return (\n    <td className={`table-cell ${props.head ? \"header-cell\" : \"\"}`}>\n      {props.children}\n    </td>\n  );\n}\n\nCell.propTypes = propTypes;\n\nexport default Cell;\n","import React, { Component } from \"react\";\nimport Cell from \"./components/cell/\";\n\nimport \"./styles.css\";\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      page: 0,\n      pageSize: (props.pagination && props.pagination.pageSize) || 10\n    };\n\n    this.renderHeader = this.renderHeader.bind(this);\n    this.renderBody = this.renderBody.bind(this);\n    this.renderFooter = this.renderFooter.bind(this);\n    this.nextPage = this.nextPage.bind(this);\n    this.prevPage = this.prevPage.bind(this);\n    this.pageSizeChange = this.pageSizeChange.bind(this);\n  }\n\n  nextPage() {\n    const { rows } = this.props;\n    const { page, pageSize } = this.state;\n\n    const numPages = Math.ceil(rows.length / pageSize);\n    if (page + 1 < numPages) {\n      this.setState({\n        page: this.state.page + 1\n      });\n    }\n  }\n\n  prevPage() {\n    const { page } = this.state;\n\n    if (page > 0) {\n      this.setState({\n        page: this.state.page - 1\n      });\n    }\n  }\n\n  pageSizeChange(event) {\n    this.setState({\n      page: 0,\n      pageSize: parseInt(event.target.value, 10)\n    });\n  }\n\n  renderHeader() {\n    const { headers } = this.props;\n    if (!headers) {\n      return null;\n    }\n    return (\n      <thead className=\"table-header table-row\">\n        <tr>\n          {headers.map((header, i) => (\n            <Cell key={i} head className=\"table-header table-cell\">\n              {header}\n            </Cell>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n\n  renderBody() {\n    const { rows, pagination } = this.props;\n    const { page, pageSize } = this.state;\n\n    const items = !pagination\n      ? rows\n      : rows.slice(page * pageSize, page * pageSize + pageSize);\n\n    // console.log(\"inicio: \" + page * pageSize);\n    // console.log(\"fin: \" + (page * pageSize + pageSize));\n    // console.log(items);\n\n    return (\n      <tbody className=\"table-boddy\">\n        {items.map((row, i) => {\n          return (\n            <tr key={i} className={`table-row ${i % 2 === 0 ? \"pair\" : \"odd\"}`}>\n              {Object.values(row).map((cell, j) => (\n                <Cell key={`${i}${j}`} className=\"table-cell\">\n                  {cell}\n                </Cell>\n              ))}\n            </tr>\n          );\n        })}\n      </tbody>\n    );\n  }\n\n  renderFooter() {\n    const { rows, pagination } = this.props;\n    const { page, pageSize } = this.state;\n\n    const numPages = Math.ceil(rows.length / pageSize);\n    if (!pagination) {\n      return null;\n    }\n    return (\n      <tfoot className=\"table-footer\">\n        <tr>\n          <td colSpan=\"0\">\n            <span className=\"pageSize\">\n              <select onChange={this.pageSizeChange}>\n                <option value={5}>5</option>\n                <option value={10}>10</option>\n                <option value={20}>20</option>\n              </select>\n            </span>\n            <span className=\"pagination\">\n              Page {page + 1} of {numPages}\n            </span>\n            <span className=\"pagination-change\">\n              <span\n                className={page === 0 ? \"disabled\" : \"\"}\n                onClick={() => this.prevPage()}\n              >\n                {\"<\"}\n              </span>\n              <span\n                className={page + 1 >= numPages ? \"disabled\" : \"\"}\n                onClick={() => this.nextPage()}\n              >\n                {\">\"}\n              </span>\n            </span>\n          </td>\n        </tr>\n      </tfoot>\n    );\n  }\n\n  render() {\n    return (\n      <table className={`table`}>\n        {this.renderHeader()}\n        {this.renderBody()}\n        {this.renderFooter()}\n      </table>\n    );\n  }\n}\n\nexport default Table;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/suso/proyectos/react-components/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from \"docz\";\nimport Table from \"./index.jsx\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"table\"\n    }}>{`Table`}</h1>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Table} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'<Table />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Table\n    }} mdxType=\"Playground\">\n  <Table mdxType=\"Table\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n"],"sourceRoot":""}